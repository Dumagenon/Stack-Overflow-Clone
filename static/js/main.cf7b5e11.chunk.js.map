{"version":3,"sources":["components/header/logo-stackoverflow.svg","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/sof-service.js","components/sof-service-context/sof-service-context.js","reducers/index.js","actions-types/index.js","store.js","components/spinner/index.js","components/spinner/spinner.js","components/questions-item/index.js","components/questions-item/questions-item.js","components/pagination/index.js","components/pagination/pagination.js","components/questions-list/index.js","components/questions-list/questions-list.js","containers/questions-list-container.js","actions/index.js","components/side-bar/index.js","components/side-bar/side-bar.js","components/related-tags/index.js","components/related-tags/related-tags.js","components/hoc/with-sof-service.js","containers/related-tags-container.js","components/pages/home-page/index.js","components/pages/home-page/home-page.js","components/pages/users-page/index.js","components/pages/users-page/users-page.js","components/pages/tags-page/index.js","components/pages/tags-page/tags-page.js","components/header/index.js","components/header/header.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","props","children","Component","ins","axios","baseURL","getResponse","url","a","get","res","statusText","Error","status","data","getQuestions","React","createContext","SofServiceProvider","Provider","SofServiceConsumer","Consumer","initialState","questions","loading","error","currentPage","pageSize","totalItems","questionsReducer","action","type","payload","store","createStore","applyMiddleware","thunkMiddleware","Spinner","QuestionsItem","className","score","isAnswered","answerCount","activeClases","is_answered","answer_count","view_count","toFixed","to","question_id","decode","title","tags","map","tag","key","rel","date","postedDate","Date","dateArr","toString","split","getSeconds","getHours","getMinutes","getDateOfPublication","creation_date","owner","display_name","reputation","Pagination","setCurrentPage","pageCount","Math","ceil","pages","maxLeft","floor","maxPages","maxRight","getMaxMinPosition","push","onClick","i","pageButtons","QuestionsList","p","onPageChange","QuestionsListContainer","pageNumber","mapDispatchToProps","dispatch","sofService","then","total","items","catch","questionsError","newPageId","connect","SideBar","activeClassName","exact","RelatedTags","relatedTags","name","count","withSofService","Wrapper","RelatedTagsContainer","getTags","HomePage","UsersPage","TagsPage","Header","src","StackLogo","alt","placeholder","aria-hidden","width","height","viewBox","d","App","from","path","component","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.cf7b5e11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-stackoverflow.5ea02efb.svg\";","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.scss';\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error</div>;\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import * as axios from 'axios';\r\n\r\nconst ins = axios.create({\r\n  baseURL: 'https://api.stackexchange.com/2.2/'\r\n});\r\n\r\nclass SofService {\r\n  getResponse = async (url) => {\r\n    const res = await ins.get(url);\r\n\r\n    if (res.statusText !== \"OK\") {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`);\r\n    }\r\n    \r\n    return res.data;\r\n  }\r\n  getQuestions = (url) => {\r\n    return this.getResponse(url);\r\n  }\r\n  getTags() {\r\n    return [\r\n        {\r\n          \"count\": 2107426,\r\n          \"name\": \"javascript\"\r\n        },\r\n        {\r\n          \"count\": 1723466,\r\n          \"name\": \"java\"\r\n        },\r\n        {\r\n          \"count\": 1563780,\r\n          \"name\": \"python\"\r\n        },\r\n        {\r\n          \"count\": 1442844,\r\n          \"name\": \"c#\"\r\n        },\r\n        {\r\n          \"count\": 1375699,\r\n          \"name\": \"php\"\r\n        },\r\n        {\r\n          \"count\": 1304948,\r\n          \"name\": \"android\"\r\n        },\r\n        {\r\n          \"count\": 1029575,\r\n          \"name\": \"html\"\r\n        },\r\n        {\r\n          \"count\": 999693,\r\n          \"name\": \"jquery\"\r\n        },\r\n        {\r\n          \"count\": 696695,\r\n          \"name\": \"c++\"\r\n        },\r\n        {\r\n          \"count\": 688899,\r\n          \"name\": \"css\"\r\n        },\r\n        {\r\n          \"count\": 643118,\r\n          \"name\": \"ios\"\r\n        },\r\n        {\r\n          \"count\": 609825,\r\n          \"name\": \"mysql\"\r\n        }\r\n    ];\r\n  }\r\n};\r\n\r\nexport default new SofService();","import React from 'react';\r\n\r\nconst {\r\n  Provider: SofServiceProvider,\r\n  Consumer: SofServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  SofServiceConsumer,\r\n  SofServiceProvider\r\n};","import {\r\n  QUESTIONS_LOADED,\r\n  QUESTIONS_REQUESTED,\r\n  QUESTIONS_ERROR,\r\n  CHANGE_CURRENT_PAGE,\r\n  SET_TOTAL_ITEMS_COUNT\r\n} from '../actions-types';\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  loading: true,\r\n  error: null,\r\n  currentPage: 1,\r\n  pageSize: 15,\r\n  totalItems: 0\r\n};\r\n\r\nconst questionsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case QUESTIONS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        questions: [],\r\n        loading:true,\r\n        error: null\r\n      };\r\n    case QUESTIONS_LOADED:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case QUESTIONS_ERROR:\r\n      return {\r\n        ...state,\r\n        questions: [],\r\n        loading:false,\r\n        error: action.payload\r\n      };\r\n    case CHANGE_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      }\r\n    case SET_TOTAL_ITEMS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalItems: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default questionsReducer;","export const QUESTIONS_LOADED = 'QUESTIONS_LOADED';\r\nexport const QUESTIONS_REQUESTED = 'QUESTIONS_REQUESTED';\r\nexport const QUESTIONS_ERROR = 'QUESTIONS_ERROR';\r\nexport const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE';\r\nexport const SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT';\r\nexport const QUESTIONS_FILTER = '!B96NeMwIYiJQy*bdTim)okETGvVkZz';","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport questionsReducer from './reducers';\r\n\r\nconst store = createStore(questionsReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nconst Spinner =  () => {\r\n  return <div>Loading...</div>\r\n};\r\n\r\nexport default Spinner; ","import QuestionsItem from './questions-item';\r\n\r\nexport default QuestionsItem;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { decode } from 'he';\r\n\r\nimport './questions-item.scss';\r\n\r\nconst QuestionsItem = ({ data }) => {\r\n\r\n  function getDateOfPublication(date) {\r\n    const postedDate = new Date(date);\r\n    const dateArr = postedDate.toString().split(' ');\r\n    \r\n    return `asked ${dateArr[1]} ${dateArr[2]} '${postedDate.getSeconds()} at ${postedDate.getHours()}:${postedDate.getMinutes()} `;\r\n  }\r\n\r\n  function isAnswered(isAnswered, answerCount) {\r\n    let activeClases = 'status';\r\n\r\n    if (isAnswered) {\r\n      activeClases += ' answered-accepted';\r\n    }\r\n    if (answerCount > 0) {\r\n      activeClases += ' answered';\r\n    }\r\n    return activeClases;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"stats-container\">\r\n        <div className=\"votes\">\r\n          <div className=\"mini-counts\"><span>{data.score}</span></div>\r\n          <div>vote{data.score !== 1 ? 's' : ''}</div>\r\n        </div>\r\n        <div className={isAnswered(data.is_answered, data.answer_count)}>\r\n          <div className=\"mini-counts\"><span>{data.answer_count}</span></div>\r\n          <div>answer{data.answer_count !== 1 ? 's' : ''}</div>\r\n        </div>\r\n        <div className=\"views\">\r\n          <div className=\"mini-counts\">\r\n            <span>\r\n              {\r\n                data.view_count >= 1000 ?\r\n                  (data.view_count / 1000).toFixed(0) + 'k' : data.view_count\r\n              }\r\n            </span>\r\n          </div>\r\n          <div>view{data.view_count !== 1 ? 's' : ''}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"summary\">\r\n          <h3>\r\n            <Link to={`/questions/${data.question_id}`} className=\"question-hyperlink\">\r\n              {decode(data.title)}\r\n            </Link>\r\n          </h3>\r\n          <div className=\"tags\">\r\n            {\r\n              data.tags.map(tag => \r\n                <Link\r\n                  key={tag}\r\n                  to={`/tags/${tag}`}\r\n                  className=\"post-tag\"\r\n                  title={`show questions tagged '${tag}'`}\r\n                  rel=\"tag\"\r\n                >{tag}</Link>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"started\">\r\n            <Link to={`/questions/${data.question_id}`} className=\"started-link\">\r\n              <span className=\"relativetime\">\r\n                {getDateOfPublication(data.creation_date)}\r\n              </span>\r\n            </Link>\r\n            <Link to={`/users/${data.owner.display_name}`}>\r\n              {data.owner.display_name} \r\n            </Link>\r\n            <span className=\"reputation-score\" title=\"reputation score\">\r\n              {` ${data.owner.reputation}`}\r\n            </span>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionsItem;","import Pagination from './pagination';\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport './pagination.scss';\r\n\r\nconst Pagination = ({ totalItems, pageSize, currentPage, setCurrentPage }) => {\r\n  const maxPages = 4;\r\n  const pageCount = Math.ceil(totalItems / pageSize);\r\n\r\n  function showPrevBtn() {\r\n    if (currentPage === 1) return null;\r\n    return <span key=\"prev-btn-pag\" onClick={() => setCurrentPage(currentPage - 1)}>Prev</span>\r\n  }\r\n\r\n  function showNextBtn() {\r\n    if (currentPage === pageCount) return null;\r\n    return <span key=\"next-btn-pag\" onClick={() => setCurrentPage(currentPage + 1)}>Next</span>\r\n  }\r\n\r\n  function getMaxMinPosition(pageCount) {\r\n    let maxLeft = (currentPage - Math.floor(maxPages / 2));\r\n    let maxRight = (currentPage + Math.floor(maxPages / 2));\r\n\r\n    if (maxLeft < 1) {\r\n      maxLeft = 1;\r\n      maxRight = maxPages;\r\n    }\r\n\r\n    if (maxRight > pageCount) {\r\n      maxLeft = pageCount - (maxPages - 1);\r\n      maxRight = pageCount;\r\n\r\n      if (maxLeft < 1) {\r\n        maxLeft = 1;\r\n      }\r\n    }\r\n\r\n    return {\r\n      maxLeft,\r\n      maxRight\r\n    };\r\n  }\r\n\r\n  function pageButtons() {\r\n    const pages = [];\r\n\r\n    const { maxLeft, maxRight } = getMaxMinPosition(pageCount);\r\n\r\n    pages.push(showPrevBtn());\r\n\r\n    if (currentPage !== 1 && maxLeft !== 1) {\r\n      pages.push((<span key={1} onClick={() => setCurrentPage(1)}>1</span>));\r\n      if (maxLeft > 2) {\r\n        pages.push((<span key=\"left-ellipsis\" className=\"pag-ellipsis\">...</span>));\r\n      }\r\n    }\r\n\r\n    for (let i = maxLeft; i <= maxRight; i++) {\r\n      pages.push((\r\n        <span\r\n          key={i}\r\n          className={currentPage === i ? \"is-selected\" : \"\"}\r\n          onClick={() => setCurrentPage(i)}>\r\n          {i}\r\n        </span>\r\n      ));\r\n    }\r\n\r\n    if (currentPage !== pageCount && maxRight !== pageCount) {\r\n      if (maxLeft < pageCount - 1) {\r\n        pages.push((<span key=\"right-ellipsis\" className=\"pag-ellipsis\">...</span>));\r\n      }\r\n      pages.push((\r\n        <span key={pageCount} onClick={() => setCurrentPage(pageCount)}>{pageCount}</span>\r\n      ));\r\n    }\r\n\r\n    pages.push(showNextBtn());\r\n\r\n    return pages;\r\n  }\r\n  \r\n  return <>\r\n    <div className=\"pagination\">\r\n      {pageButtons()}\r\n    </div>\r\n  </>\r\n};\r\n\r\nexport default Pagination;","import QuestionsList from './questions-list';\r\n\r\nexport default QuestionsList;","import React from 'react';\r\n\r\nimport QuestionsItem from '../questions-item';\r\nimport Pagination from '../pagination';\r\n\r\nimport './questions-list.scss';\r\n\r\nconst QuestionsList = (p) => {\r\n  return (\r\n    <>\r\n      <Pagination\r\n        currentPage={p.currentPage}\r\n        pageSize={p.pageSize}\r\n        totalItems={p.totalItems}\r\n        setCurrentPage={p.onPageChange}/>\r\n      <ul className=\"questions__list\">\r\n        {\r\n          p.questions.map((data) => {\r\n            return (\r\n              <li key={data.question_id}>\r\n                <QuestionsItem data={data} />\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionsList;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getQuestions, setCurrentPage } from '../actions';\r\n\r\nimport Spinner from '../components/spinner';\r\nimport ErrorIndicator from '../components/error-indicator';\r\nimport QuestionsList from '../components/questions-list';\r\n\r\nclass QuestionsListContainer extends Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize, getQuestions } = this.props;\r\n    const url = `questions?page=${currentPage}&pagesize=${pageSize}&order=desc&sort=activity&site=stackoverflow&filter=!0S2DC*iP9nl5dEmG4*.sVeSJC`;\r\n\r\n    getQuestions(url);\r\n  }\r\n\r\n  onPageChange = (pageNumber) => {\r\n    const { getQuestions, setCurrentPage, pageSize } = this.props;\r\n    setCurrentPage(pageNumber);\r\n    getQuestions(`questions?page=${pageNumber}&pagesize=${pageSize}&order=desc&sort=activity&site=stackoverflow&filter=!0S2DC*iP9nl5dEmG4*.sVeSJC`);\r\n  }\r\n\r\n  render() {\r\n    const p = this.props;\r\n\r\n    if (p.loading) return <Spinner />;\r\n  \r\n    if (p.error) return <ErrorIndicator />;\r\n\r\n    return <QuestionsList\r\n      questions={p.questions}\r\n      totalItems={p.totalItems}\r\n      pageSize={p.pageSize}\r\n      currentPage={p.currentPage}\r\n      onPageChange={this.onPageChange}/>\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getQuestions,\r\n  setCurrentPage\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(QuestionsListContainer);\r\n","import {\r\n  QUESTIONS_LOADED,\r\n  QUESTIONS_REQUESTED,\r\n  QUESTIONS_ERROR,\r\n  CHANGE_CURRENT_PAGE,\r\n  SET_TOTAL_ITEMS_COUNT\r\n} from '../actions-types';\r\n\r\nimport sofService from '../services/sof-service';\r\n\r\nconst questionsLoaded = (newQuestions) => (\r\n  { type: QUESTIONS_LOADED, payload: newQuestions }\r\n);\r\nconst questionsRequested = () => (\r\n  { type: QUESTIONS_REQUESTED }\r\n  );\r\nconst questionsError = (error) => (\r\n  { type: QUESTIONS_ERROR, payload: error }\r\n  );\r\nconst setTotalItemsCount = (totalItemsCount) => (\r\n  { type: SET_TOTAL_ITEMS_COUNT, payload: totalItemsCount}\r\n);\r\n\r\nexport const getQuestions = (url) => (dispatch) => {\r\n  dispatch(questionsRequested());\r\n  sofService.getQuestions(url)\r\n    .then(data => {\r\n      dispatch(setTotalItemsCount(data.total));\r\n      dispatch(questionsLoaded(data.items));\r\n    })\r\n    .catch(error => dispatch(questionsError(error)));\r\n}\r\n\r\nexport const setCurrentPage = (newPageId) => ({ type: CHANGE_CURRENT_PAGE, payload: newPageId});\r\n","import SideBar from './side-bar';\r\nexport default SideBar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './side-bar.scss';\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <nav className=\"sidebar__nav\">\r\n        <ul className=\"sidebar__nav-list\">\r\n          <li>\r\n            <NavLink\r\n              activeClassName=\"sidebar__link-active\"\r\n              exact\r\n              to=\"/\"\r\n              className=\"sidebar__nav-link home-link\">Home</NavLink>\r\n          </li>\r\n          <ul>\r\n            <li className=\"sidebar__public-item\">Public</li>\r\n            <li>\r\n              <NavLink activeClassName=\"sidebar__link-active\" to=\"/users/\" className=\"sidebar__nav-link\">Users</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"sidebar__link-active\" to=\"/tags/\" className=\"sidebar__nav-link\">Tags</NavLink>\r\n            </li>\r\n          </ul>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;","import RelatedTags from './related-tags';\r\nexport default RelatedTags;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RelatedTags = ({ relatedTags }) => {\r\n  return (\r\n    <div className=\"related-tags\">\r\n      <h4>Related Tags</h4>\r\n      <ul>\r\n        {\r\n          relatedTags.map(tag => {\r\n            return (\r\n              <li key={tag.name}>\r\n                <Link to={`/tags/${tag.name}`} className=\"post-tag\" rel=\"tag\">\r\n                  {tag.name}\r\n                </Link>\r\n                <span className=\"multiplier\">\r\n                  <span>×</span>\r\n                  &nbsp;\r\n                  <span>{tag.count}</span>\r\n                </span>\r\n              </li>\r\n            );\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedTags;","import React from 'react';\r\nimport { SofServiceConsumer } from '../sof-service-context';\r\n\r\nconst withSofService = () => (Wrapper) => {\r\n  return (props) => {\r\n    return <SofServiceConsumer>\r\n      {\r\n        (sofService) => {\r\n          return <Wrapper {...props} sofService={sofService} />\r\n        }\r\n      }\r\n    </SofServiceConsumer>\r\n  }\r\n};\r\n\r\nexport default withSofService;","import React, { Component } from 'react';\r\nimport RelatedTags from '../components/related-tags';\r\nimport { withSofService } from '../components/hoc';\r\n\r\n// const withRequested = (View, getData) => {\r\n//   return class extends Component {\r\n\r\n//   }\r\n// }\r\n\r\nclass RelatedTagsContainer extends Component {\r\n  state = {\r\n    relatedTags: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({relatedTags: this.props.sofService.getTags() });\r\n  }\r\n\r\n  render() {\r\n    return <RelatedTags relatedTags={this.state.relatedTags} />\r\n  }\r\n}\r\n\r\nexport default withSofService()(RelatedTagsContainer);\r\n","import HomePage from './home-page';\r\nexport default HomePage;","import React from 'react';\r\nimport { QuestionsListContainer } from '../../../containers';\r\nimport SideBar from '../../side-bar';\r\nimport RelatedTagsContainer from '../../../containers/related-tags-container';\r\n\r\nimport './home-page.scss';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <section className=\"questions\">\r\n      <div className=\"container\">\r\n        <div className=\"questions__container\">\r\n          <SideBar />\r\n          <div className=\"questions__content\">\r\n            <div>\r\n              <h1>All Questions</h1>\r\n              <QuestionsListContainer />\r\n            </div>\r\n            <RelatedTagsContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import UsersPage from './users-page';\r\nexport default UsersPage;","import React from 'react';\r\n\r\nconst UsersPage = () => {\r\n  return <h1>Users page</h1>\r\n};\r\n\r\nexport default UsersPage;","import TagsPage from './tags-page';\r\nexport default TagsPage;","import React from 'react';\r\n\r\nconst TagsPage = () => {\r\n  return <h1>Tags page</h1>\r\n};\r\n\r\nexport default TagsPage;","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.scss';\r\nimport StackLogo from './logo-stackoverflow.svg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container header__container\">\r\n        <div className=\"header__row\">\r\n          <Link to=\"/\" className=\"header__logo\">\r\n            <img src={StackLogo} alt=\"Stack Ovarflow logo\" />\r\n          </Link>\r\n          <form className=\"header__form\">\r\n            <input type=\"search\" placeholder=\"Search...\"/>\r\n            <svg aria-hidden=\"true\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"><path d=\"M18 16.5l-5.14-5.18h-.35a7 7 0 10-1.19 1.19v.35L16.5 18l1.5-1.5zM12 7A5 5 0 112 7a5 5 0 0110 0z\"></path></svg>\r\n          </form>\r\n          <button className=\"btn header__login-btn\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { HomePage, UsersPage, TagsPage } from '../pages';\r\nimport Header from '../header';\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Redirect from='/Stack-Overflow-Clone/' to=\"/\" />{/*   Dev only    */}\r\n      \r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/users/\" component={UsersPage} />\r\n        <Route exact path=\"/tags/\" component={TagsPage} />\r\n      </Switch>\r\n      <Route exact path=\"/blank\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport sofService from './services/sof-service';\r\nimport { SofServiceProvider } from './components/sof-service-context';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nimport store from './store';\r\n\r\nimport App from './components/app';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <SofServiceProvider value={sofService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </SofServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>\r\n, document.getElementById('root'));\r\n  "],"sourceRoot":""}