{"version":3,"sources":["components/header/logo-stackoverflow.svg","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/sof-service.js","components/sof-service-context/sof-service-context.js","reducers/index.js","actions-types/index.js","store.js","utils/index.js","components/spinner/index.js","components/spinner/spinner.js","components/questions-item/index.js","components/questions-item/questions-item.js","components/pagination/index.js","components/pagination/pagination.js","components/sorts/index.js","components/sorts/sorts.js","components/questions-list/index.js","components/questions-list/questions-list.js","containers/questions-list-container.js","actions/index.js","components/side-bar/index.js","components/side-bar/side-bar.js","components/related-tags/index.js","components/related-tags/related-tags.js","components/hoc/with-sof-service.js","containers/related-tags-container.js","components/pages/home-page/index.js","components/pages/home-page/home-page.js","components/pages/users-page/index.js","components/pages/users-page/users-page.js","components/pages/tags-page/index.js","components/pages/tags-page/tags-page.js","components/header/index.js","components/header/header.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","props","children","Component","ins","axios","baseURL","getResponse","url","a","get","res","statusText","Error","status","data","getQuestions","React","createContext","SofServiceProvider","Provider","SofServiceConsumer","Consumer","initialState","questions","loading","error","currentPage","pageSize","totalItems","sort","order","questionsReducer","action","type","payload","store","createStore","applyMiddleware","thunkMiddleware","getApiUrl","point","params","key","Spinner","QuestionsItem","className","score","isAnswered","answerCount","activeClases","is_answered","answer_count","view_count","toFixed","to","question_id","decode","title","tags","map","tag","rel","date","postedDate","Date","dateArr","toString","split","getSeconds","getHours","getMinutes","getDateOfPublication","creation_date","owner","display_name","reputation","Pagination","setCurrentPage","onPageSizeChanged","pageCount","Math","ceil","pages","maxLeft","floor","maxPages","maxRight","getMaxMinPosition","push","onClick","i","pageButtons","size","Filters","onSortChanged","sorts","currentSort","disabled","field","label","QuestionsList","p","x","replace","onPageChange","QuestionsListContainer","pageNumber","page","pagesize","filter","setPageSize","setSort","onOrderChaned","console","log","mapDispatchToProps","dispatch","sofService","then","total","items","catch","questionsError","newPageId","setOrder","connect","SideBar","activeClassName","exact","RelatedTags","relatedTags","onMoreBtnClick","isShowAll","getTagsToShow","count","name","length","withSofService","Wrapper","RelatedTagsContainer","getTags","HomePage","UsersPage","TagsPage","Header","src","StackLogo","alt","placeholder","aria-hidden","width","height","viewBox","d","App","from","path","component","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.573f1977.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-stackoverflow.5ea02efb.svg\";","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.scss';\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error</div>;\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import * as axios from 'axios';\r\n\r\nconst ins = axios.create({\r\n  baseURL: 'https://api.stackexchange.com/2.2/'\r\n});\r\n\r\nclass SofService {\r\n  getResponse = async (url) => {\r\n    const res = await ins.get(url);\r\n\r\n    if (res.statusText !== \"OK\") {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`);\r\n    }\r\n    \r\n    return res.data;\r\n  }\r\n  getQuestions = (url) => {\r\n    return this.getResponse(url);\r\n  }\r\n  getTags(url) {\r\n    return this.getResponse(url)\r\n  }\r\n};\r\n\r\nexport default new SofService();","import React from 'react';\r\n\r\nconst {\r\n  Provider: SofServiceProvider,\r\n  Consumer: SofServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  SofServiceConsumer,\r\n  SofServiceProvider\r\n};","import {\r\n  QUESTIONS_LOADED,\r\n  QUESTIONS_REQUESTED,\r\n  QUESTIONS_ERROR,\r\n  CHANGE_CURRENT_PAGE,\r\n  SET_TOTAL_ITEMS_COUNT,\r\n  CHANGE_PAGE_SIZE,\r\n  SET_SORT,\r\n  SET_ORDER\r\n} from '../actions-types';\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  loading: true,\r\n  error: null,\r\n  currentPage: 1,\r\n  pageSize: 15,\r\n  totalItems: 0,\r\n  sort: \"activity\",\r\n  order: \"desc\"\r\n};\r\n\r\nconst questionsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case QUESTIONS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        questions: [],\r\n        loading:true,\r\n        error: null\r\n      };\r\n    case QUESTIONS_LOADED:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case QUESTIONS_ERROR:\r\n      return {\r\n        ...state,\r\n        questions: [],\r\n        loading:false,\r\n        error: action.payload\r\n      };\r\n    case CHANGE_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      };\r\n    case CHANGE_PAGE_SIZE:\r\n      return {\r\n        ...state,\r\n        pageSize: action.payload\r\n      };\r\n    case SET_TOTAL_ITEMS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalItems: action.payload\r\n      };\r\n    case SET_SORT:\r\n      return {\r\n        ...state,\r\n        sort: action.payload\r\n      };\r\n    case SET_ORDER:\r\n      return {\r\n        ...state,\r\n        order: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default questionsReducer;","export const QUESTIONS_LOADED = 'QUESTIONS_LOADED';\r\nexport const QUESTIONS_REQUESTED = 'QUESTIONS_REQUESTED';\r\nexport const QUESTIONS_ERROR = 'QUESTIONS_ERROR';\r\nexport const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE';\r\nexport const CHANGE_PAGE_SIZE = 'CHANGE_PAGE_SIZE';\r\nexport const SET_TOTAL_ITEMS_COUNT = 'SET_TOTAL_ITEMS_COUNT';\r\nexport const SET_ORDER = 'SET_ORDER';\r\nexport const SET_SORT = 'SET_SORT';","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport questionsReducer from './reducers';\r\n\r\nconst store = createStore(questionsReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","export function getApiUrl(point, params) {\r\n  let res = `${point}?`;\r\n\r\n  for (let key in params) {\r\n    res += `${key}=${params[key]}&`;\r\n  }\r\n  return res += 'site=stackoverflow';\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nconst Spinner =  () => {\r\n  return <div>Loading...</div>\r\n};\r\n\r\nexport default Spinner; ","import QuestionsItem from './questions-item';\r\n\r\nexport default QuestionsItem;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { decode } from 'he';\r\n\r\nimport './questions-item.scss';\r\n\r\nconst QuestionsItem = ({ data }) => {\r\n\r\n  function getDateOfPublication(date) {\r\n    const postedDate = new Date(date);\r\n    const dateArr = postedDate.toString().split(' ');\r\n    \r\n    return `asked ${dateArr[1]} ${dateArr[2]} '${postedDate.getSeconds()} at ${postedDate.getHours()}:${postedDate.getMinutes()} `;\r\n  }\r\n\r\n  function isAnswered(isAnswered, answerCount) {\r\n    let activeClases = 'status';\r\n\r\n    if (isAnswered) {\r\n      activeClases += ' answered-accepted';\r\n    }\r\n    if (answerCount > 0) {\r\n      activeClases += ' answered';\r\n    }\r\n    return activeClases;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"stats-container\">\r\n        <div className=\"votes\">\r\n          <div className=\"mini-counts\"><span>{data.score}</span></div>\r\n          <div>vote{data.score !== 1 ? 's' : ''}</div>\r\n        </div>\r\n        <div className={isAnswered(data.is_answered, data.answer_count)}>\r\n          <div className=\"mini-counts\"><span>{data.answer_count}</span></div>\r\n          <div>answer{data.answer_count !== 1 ? 's' : ''}</div>\r\n        </div>\r\n        <div className=\"views\">\r\n          <div className=\"mini-counts\">\r\n            <span>\r\n              {\r\n                data.view_count >= 1000 ?\r\n                  (data.view_count / 1000).toFixed(0) + 'k' : data.view_count\r\n              }\r\n            </span>\r\n          </div>\r\n          <div>view{data.view_count !== 1 ? 's' : ''}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"summary\">\r\n          <h3>\r\n            <Link to={`/questions/${data.question_id}`} className=\"question-hyperlink\">\r\n              {decode(data.title)}\r\n            </Link>\r\n          </h3>\r\n          <div className=\"tags\">\r\n            {\r\n              data.tags.map(tag => \r\n                <Link\r\n                  key={tag}\r\n                  to={`/tags/${tag}`}\r\n                  className=\"post-tag\"\r\n                  title={`show questions tagged '${tag}'`}\r\n                  rel=\"tag\"\r\n                >{tag}</Link>\r\n              )\r\n            }\r\n          </div>\r\n          <div className=\"started\">\r\n            <Link to={`/questions/${data.question_id}`} className=\"started-link\">\r\n              <span className=\"relativetime\">\r\n                {getDateOfPublication(data.creation_date)}\r\n              </span>\r\n            </Link>\r\n            <Link to={`/users/${data.owner.display_name}`}>\r\n              {data.owner.display_name} \r\n            </Link>\r\n            <span className=\"reputation-score\" title=\"reputation score\">\r\n              {` ${data.owner.reputation}`}\r\n            </span>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionsItem;","import Pagination from './pagination';\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport './pagination.scss';\r\n\r\nconst Pagination = ({ totalItems, pageSize,\r\n    currentPage, setCurrentPage, onPageSizeChanged }) => {\r\n  const maxPages = 4;\r\n  const pageCount = Math.ceil(totalItems / pageSize);\r\n\r\n  function showPrevBtn() {\r\n    if (currentPage === 1) return null;\r\n    return <span key=\"prev-btn-pag\" onClick={() => setCurrentPage(currentPage - 1)}>Prev</span>\r\n  }\r\n\r\n  function showNextBtn() {\r\n    if (currentPage === pageCount) return null;\r\n    return <span key=\"next-btn-pag\" onClick={() => setCurrentPage(currentPage + 1)}>Next</span>\r\n  }\r\n\r\n  function getMaxMinPosition(pageCount) {\r\n    let maxLeft = (currentPage - Math.floor(maxPages / 2));\r\n    let maxRight = (currentPage + Math.floor(maxPages / 2));\r\n\r\n    if (maxLeft < 1) {\r\n      maxLeft = 1;\r\n      maxRight = maxPages;\r\n    }\r\n\r\n    if (maxRight > pageCount) {\r\n      maxLeft = pageCount - (maxPages - 1);\r\n      maxRight = pageCount;\r\n\r\n      if (maxLeft < 1) {\r\n        maxLeft = 1;\r\n      }\r\n    }\r\n\r\n    return {\r\n      maxLeft,\r\n      maxRight\r\n    };\r\n  }\r\n\r\n  function pageButtons() {\r\n    const pages = [];\r\n\r\n    const { maxLeft, maxRight } = getMaxMinPosition(pageCount);\r\n\r\n    pages.push(showPrevBtn());\r\n\r\n    if (currentPage !== 1 && maxLeft !== 1) {\r\n      pages.push((<span key={1} onClick={() => setCurrentPage(1)}>1</span>));\r\n      if (maxLeft > 2) {\r\n        pages.push((<span key=\"left-ellipsis\" className=\"pag-ellipsis\">...</span>));\r\n      }\r\n    }\r\n\r\n    for (let i = maxLeft; i <= maxRight; i++) {\r\n      pages.push((\r\n        <span\r\n          key={i}\r\n          className={currentPage === i ? \"is-selected\" : \"\"}\r\n          onClick={() => setCurrentPage(i)}>\r\n          {i}\r\n        </span>\r\n      ));\r\n    }\r\n\r\n    if (currentPage !== pageCount && maxRight !== pageCount) {\r\n      if (maxLeft < pageCount - 1) {\r\n        pages.push((<span key=\"right-ellipsis\" className=\"pag-ellipsis\">...</span>));\r\n      }\r\n      pages.push((\r\n        <span key={pageCount} onClick={() => setCurrentPage(pageCount)}>{pageCount}</span>\r\n      ));\r\n    }\r\n\r\n    pages.push(showNextBtn());\r\n\r\n    return pages;\r\n  }\r\n\r\n  function pageSizeBtns() {\r\n    return [15, 30, 50].map(size => {\r\n      return <span key={size} onClick={() => onPageSizeChanged(size)}\r\n        className={size === pageSize ? \"is-selected\" : \"\"}>{size}</span>\r\n    });\r\n  }\r\n  \r\n  return <>\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination-list\">\r\n        {pageButtons()}\r\n      </div>\r\n      <div className=\"page-size\">\r\n        {pageSizeBtns()}\r\n        <div className=\"per-page\">per page</div>\r\n      </div>\r\n    </div>\r\n  </>\r\n};\r\n\r\nexport default Pagination;","import Filters from './sorts';\r\nexport default Filters;","import React from 'react';\r\nimport './sorts.scss';\r\n\r\nconst Filters = ({ onSortChanged, sorts, totalItems, loading, currentSort }) => {\r\n  return (\r\n    <div className=\"sorts-block\">\r\n      <div className=\"total-items\">{totalItems}</div>\r\n      <div className=\"sorts\">\r\n        {\r\n          sorts.map(sort => {\r\n            return <button disabled={loading} key={sort.field}\r\n              className={`sorts__item${currentSort === sort.field ? \" is-selected\" : \"\"}`}\r\n              onClick={() => onSortChanged(sort.field)}>\r\n                {sort.label}  \r\n              </button>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filters;","import QuestionsList from './questions-list';\r\n\r\nexport default QuestionsList;","import React from 'react';\r\n\r\nimport QuestionsItem from '../questions-item';\r\nimport Pagination from '../pagination';\r\nimport Filters from '../sorts';\r\nimport { numberWithCommas } from '../../utils';\r\n\r\nimport './questions-list.scss';\r\n\r\nconst QuestionsList = (p) => {\r\n  return (\r\n    <>\r\n      <Filters\r\n        totalItems={`${numberWithCommas(p.totalItems)} questions`}\r\n        onSortChanged={p.onSortChanged}\r\n        sorts={p.sorts}\r\n        currentSort={p.sort}\r\n        loading={p.loading}/>\r\n      <ul className=\"questions__list\">\r\n        {\r\n          p.questions.map((data) => {\r\n            return (\r\n              <li key={data.question_id}>\r\n                <QuestionsItem data={data} />\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      <Pagination\r\n        currentPage={p.currentPage}\r\n        pageSize={p.pageSize}\r\n        totalItems={p.totalItems}\r\n        setCurrentPage={p.onPageChange}\r\n        onPageSizeChanged={p.onPageSizeChanged}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionsList;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getQuestions, setCurrentPage,\r\n  setPageSize, setOrder, setSort } from '../actions';\r\nimport { getApiUrl } from '../utils';\r\n\r\nimport Spinner from '../components/spinner';\r\nimport ErrorIndicator from '../components/error-indicator';\r\nimport QuestionsList from '../components/questions-list';\r\n\r\nclass QuestionsListContainer extends Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize, getQuestions, order, sort } = this.props;\r\n\r\n    getQuestions(getApiUrl(\"questions\", {\r\n      page: currentPage,\r\n      pagesize: pageSize,\r\n      order,\r\n      sort,\r\n      filter: \"!0S2DC*iP9nl5dEmG4*.sVeSJC\"\r\n    }));\r\n  }\r\n\r\n  onPageChange = (pageNumber) => {\r\n    const { getQuestions, setCurrentPage, pageSize, order, sort } = this.props;\r\n    \r\n    setCurrentPage(pageNumber);\r\n    getQuestions(getApiUrl(\"questions\", {\r\n      page: pageNumber,\r\n      pagesize: pageSize,\r\n      order,\r\n      sort,\r\n      filter: \"!0S2DC*iP9nl5dEmG4*.sVeSJC\"\r\n    }));\r\n  }\r\n\r\n  onPageSizeChanged = (pageSize) => {\r\n    const { setPageSize, setCurrentPage,\r\n      getQuestions, order, sort } = this.props;\r\n    \r\n    setPageSize(pageSize);\r\n    setCurrentPage(1);\r\n    getQuestions(getApiUrl(\"questions\", {\r\n      page: 1,\r\n      pagesize: pageSize,\r\n      order,\r\n      sort,\r\n      filter: \"!0S2DC*iP9nl5dEmG4*.sVeSJC\"\r\n    }));\r\n  }\r\n\r\n  onSortChanged = (sort) => {\r\n    const { setSort, setCurrentPage,\r\n      getQuestions, order, pageSize } = this.props;\r\n\r\n    setSort(sort);\r\n    setCurrentPage(1);\r\n    getQuestions(getApiUrl(\"questions\", {\r\n      page: 1,\r\n      pagesize: pageSize,\r\n      order,\r\n      sort,\r\n      filter: \"!0S2DC*iP9nl5dEmG4*.sVeSJC\"\r\n    }));\r\n  }\r\n\r\n  onOrderChaned = (order) => {\r\n    console.log(order);\r\n  }\r\n\r\n  render() {\r\n    const p = this.props;\r\n    const sorts = [\r\n      {field: \"activity\", label: \"Activity\"},\r\n      {field: \"votes\", label: \"Votes\"},\r\n      {field: \"creation\", label: \"Creation\"},\r\n    ]\r\n\r\n    if (p.loading) return <Spinner />;\r\n  \r\n    if (p.error) return <ErrorIndicator />;\r\n    \r\n    return <QuestionsList\r\n      questions={p.questions}\r\n      totalItems={p.totalItems}\r\n      pageSize={p.pageSize}\r\n      currentPage={p.currentPage}\r\n      loading={p.loading}\r\n      sorts={sorts}\r\n      sort={p.sort}\r\n      onPageChange={this.onPageChange}\r\n      onPageSizeChanged={this.onPageSizeChanged}\r\n      onSortChanged={this.onSortChanged} />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getQuestions,\r\n  setCurrentPage,\r\n  setPageSize,\r\n  setOrder,\r\n  setSort\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(QuestionsListContainer);\r\n","import {\r\n  QUESTIONS_LOADED,\r\n  QUESTIONS_REQUESTED,\r\n  QUESTIONS_ERROR,\r\n  CHANGE_CURRENT_PAGE,\r\n  CHANGE_PAGE_SIZE,\r\n  SET_TOTAL_ITEMS_COUNT,\r\n  SET_ORDER,\r\n  SET_SORT\r\n} from '../actions-types';\r\n\r\nimport sofService from '../services/sof-service';\r\n\r\nconst questionsLoaded = (newQuestions) => (\r\n  { type: QUESTIONS_LOADED, payload: newQuestions }\r\n);\r\nconst questionsRequested = () => (\r\n  { type: QUESTIONS_REQUESTED }\r\n  );\r\nconst questionsError = (error) => (\r\n  { type: QUESTIONS_ERROR, payload: error }\r\n  );\r\nconst setTotalItemsCount = (totalItemsCount) => (\r\n  { type: SET_TOTAL_ITEMS_COUNT, payload: totalItemsCount}\r\n);\r\n\r\nexport const getQuestions = (url) => (dispatch) => {\r\n  dispatch(questionsRequested());\r\n  sofService.getQuestions(url)\r\n    .then(data => {\r\n      dispatch(setTotalItemsCount(data.total));\r\n      dispatch(questionsLoaded(data.items));\r\n    })\r\n    .catch(error => dispatch(questionsError(error)));\r\n}\r\n\r\nexport const setCurrentPage = (newPageId) => ({ type: CHANGE_CURRENT_PAGE, payload: newPageId });\r\nexport const setPageSize = (pageSize) => ({ type: CHANGE_PAGE_SIZE, payload: pageSize });\r\nexport const setOrder = (order) => ({ type: SET_ORDER, payload: order });\r\nexport const setSort = (sort) => ({ type: SET_SORT, payload: sort });\r\n","import SideBar from './side-bar';\r\nexport default SideBar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './side-bar.scss';\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <nav className=\"sidebar__nav\">\r\n        <ul className=\"sidebar__nav-list\">\r\n          <li>\r\n            <NavLink\r\n              activeClassName=\"sidebar__link-active\"\r\n              exact\r\n              to=\"/\"\r\n              className=\"sidebar__nav-link home-link\">Home</NavLink>\r\n          </li>\r\n          <ul>\r\n            <li className=\"sidebar__public-item\">Public</li>\r\n            <li>\r\n              <NavLink activeClassName=\"sidebar__link-active\" to=\"/users/\" className=\"sidebar__nav-link\">Users</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"sidebar__link-active\" to=\"/tags/\" className=\"sidebar__nav-link\">Tags</NavLink>\r\n            </li>\r\n          </ul>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;","import RelatedTags from './related-tags';\r\nexport default RelatedTags;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './related-tags.scss';\r\n\r\nconst RelatedTags = ({ relatedTags, onMoreBtnClick, isShowAll }) => {\r\n  \r\n  function getTagsToShow(count) {\r\n    const tags = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      tags.push((\r\n        <li key={relatedTags[i].name}>\r\n          <Link \r\n          to={`/tags/${relatedTags[i].name}`} className=\"post-tag\" rel=\"tag\">\r\n            {relatedTags[i].name}\r\n          </Link>\r\n          <span className=\"multiplier\">\r\n            <span>×</span>\r\n\r\n            &nbsp;\r\n            <span>{relatedTags[i].count}</span>\r\n          </span>\r\n        </li>\r\n      ));\r\n    }\r\n    return tags;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"related-tags\">\r\n      <h4>Related Tags</h4>\r\n      <ul>\r\n        {isShowAll ? getTagsToShow(relatedTags.length) : getTagsToShow(10)}\r\n      </ul>\r\n      {\r\n        isShowAll ? null : <button onClick={onMoreBtnClick}>\r\n          more related tags\r\n        </button>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedTags;","import React from 'react';\r\nimport { SofServiceConsumer } from '../sof-service-context';\r\n\r\nconst withSofService = () => (Wrapper) => {\r\n  return (props) => {\r\n    return <SofServiceConsumer>\r\n      {\r\n        (sofService) => {\r\n          return <Wrapper {...props} sofService={sofService} />\r\n        }\r\n      }\r\n    </SofServiceConsumer>\r\n  }\r\n};\r\n\r\nexport default withSofService;","import React, { Component } from 'react';\r\nimport RelatedTags from '../components/related-tags';\r\nimport { withSofService } from '../components/hoc';\r\n\r\n// const withRequested = (View, getData) => {\r\n//   return class extends Component {\r\n\r\n//   }\r\n// }\r\n\r\nclass RelatedTagsContainer extends Component {\r\n  state = {\r\n    relatedTags: [],\r\n    loading: true,\r\n    isShowAll: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.sofService.getTags('tags?page=1&pagesize=25&order=desc&sort=popular&site=stackoverflow&filter=!-.G.68pqislT')\r\n      .then(data => {\r\n        this.setState({\r\n          relatedTags: data.items,\r\n          loading: false\r\n        });\r\n      })\r\n  }\r\n\r\n  onMoreBtnClick = () => {\r\n    this.setState({ isShowAll: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>Loading...</div>\r\n    }\r\n    return <RelatedTags {...this.state} onMoreBtnClick={this.onMoreBtnClick} />\r\n  }\r\n}\r\n\r\nexport default withSofService()(RelatedTagsContainer);\r\n","import HomePage from './home-page';\r\nexport default HomePage;","import React from 'react';\r\nimport { QuestionsListContainer } from '../../../containers';\r\nimport SideBar from '../../side-bar';\r\nimport RelatedTagsContainer from '../../../containers/related-tags-container';\r\n\r\nimport './home-page.scss';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <section className=\"questions\">\r\n      <div className=\"container\">\r\n        <div className=\"questions__container\">\r\n          <SideBar />\r\n          <div className=\"questions__content\">\r\n            <div>\r\n              <h1>All Questions</h1>\r\n              <QuestionsListContainer />\r\n            </div>\r\n            <RelatedTagsContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import UsersPage from './users-page';\r\nexport default UsersPage;","import React from 'react';\r\n\r\nconst UsersPage = () => {\r\n  return <h1>Users page</h1>\r\n};\r\n\r\nexport default UsersPage;","import TagsPage from './tags-page';\r\nexport default TagsPage;","import React from 'react';\r\n\r\nconst TagsPage = () => {\r\n  return <h1>Tags page</h1>\r\n};\r\n\r\nexport default TagsPage;","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.scss';\r\nimport StackLogo from './logo-stackoverflow.svg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container header__container\">\r\n        <div className=\"header__row\">\r\n          <Link to=\"/\" className=\"header__logo\">\r\n            <img src={StackLogo} alt=\"Stack Ovarflow logo\" />\r\n          </Link>\r\n          <form className=\"header__form\">\r\n            <input type=\"search\" placeholder=\"Search...\"/>\r\n            <svg aria-hidden=\"true\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"><path d=\"M18 16.5l-5.14-5.18h-.35a7 7 0 10-1.19 1.19v.35L16.5 18l1.5-1.5zM12 7A5 5 0 112 7a5 5 0 0110 0z\"></path></svg>\r\n          </form>\r\n          <button className=\"btn header__login-btn\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { HomePage, UsersPage, TagsPage } from '../pages';\r\nimport Header from '../header';\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Redirect from='/Stack-Overflow-Clone/' to=\"/\" />{/*   Dev only    */}\r\n      \r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/users/\" component={UsersPage} />\r\n        <Route exact path=\"/tags/\" component={TagsPage} />\r\n      </Switch>\r\n      <Route exact path=\"/blank\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport sofService from './services/sof-service';\r\nimport { SofServiceProvider } from './components/sof-service-context';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nimport store from './store';\r\n\r\nimport App from './components/app';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <SofServiceProvider value={sofService}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </SofServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>\r\n, document.getElementById('root'));\r\n  "],"sourceRoot":""}